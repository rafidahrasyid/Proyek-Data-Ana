# -*- coding: utf-8 -*-
"""Proyek Analisis Data : Brazillian E-commerce.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ieyw-NWzuasBk66onUhIK3_PWRrs3m1c

# **Proyek Analisis Data : Brazillian E-Commerce**

*   **Nama** : Rafidah Rasyid


*   **Email** : M006D4KX2283@bangkit.academy
*   **ID Dicoding** : M006D4KX2283

# **Menentukan Pertanyaan Bisnis**

*   Bagaimana pola pembelian produk dalam setahun pertama?
*   Apakah ada bulan tertentu dalam setahun yang cenderung memiliki penjualan lebih tinggi atau lebih rendah?

# **Import Package**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""# **Data Wrangling**

**Gathering Data**
"""

#Tabel Order Items
orderItems_df = pd.read_csv("/content/olist_order_items_dataset[1].csv")
orderItems_df.head()

#Tabel Order Reviews
orderReviews_df = pd.read_csv("/content/olist_order_reviews_dataset[2].csv")
orderReviews_df.head()

#Tabel Orders
orders_df = pd.read_csv("/content/olist_orders_dataset[1].csv")
orders_df

#Tabel Product Category
productCategory_df = pd.read_csv("/content/product_category_name_translation[1].csv")
productCategory_df.head()

#Tabel Products
products_df = pd.read_csv("/content/olist_products_dataset[1].csv")
products_df.head()

"""**Assessing Data**

**orderItems_df**
"""

#Menilai data orderItems_df
orderItems_df.info()

#Memeriksa missing values pada orderItems_df
orderItems_df.isna().sum()

#Memeriksa duplikasi pada orderItems_df
print('Jumlah Duplikasi : ', orderItems_df.duplicated().sum())

#Memeriksa parameter statistik pada orderItems_df
orderItems_df.describe()

"""**orderReviews_df**"""

#Menilia data orderReviews_df
orderReviews_df.info()

#Memeriksa missing values pada orderReviews_df
orderReviews_df.isna().sum()

#Memeriksa parameter statistika pada orderReviews_df
orderReviews_df.describe()

"""**orders_df**"""

#Menilai data orders_df
orders_df.info()

#Memeriksa missing values pada orders_df
orders_df.isna().sum()

#Memeriksa duplikasi pada orders_df
print('Jumlah Duplikasi: ', orders_df.duplicated().sum())

#Memeriksa parameter statistik pada orders_df
orders_df.describe()

"""**productCategory_df**"""

#Menilai data productCategory_df
productCategory_df.info()

#Memeriksa missing values pada productCategory_df
productCategory_df.isna().sum()

#Memerika duplikasi pada productCategory_df
productCategory_df.describe()

"""**products_df**"""

#Menilai data products_df
products_df.info()

#Memeriksa missing values pada products_df
products_df.isna().sum()

#Memeriksa duplikasi data
print('Jumlah Duplikasi: ', products_df.duplicated().sum())

#Memeriksa parameter statistik pada products_df
products_df.describe()

"""# **Cleaning Data**"""

#Mengganti tipe data pada kolom shipping_limit_date di orderItems_df
orderItems_df['shipping_limit_date'] = pd.to_datetime(orderItems_df['shipping_limit_date'])

orderItems_df.info()

#Mengatasi missing values pada orderReviews_df
orderReviews_df.drop(columns=['review_comment_title', 'review_comment_message'], inplace=True)

#Mengganti tipe data pada kolom review_creation_date dan review_answer_timestamp di orderReviews_df menjadi datatime
datetime_columns = ['review_creation_date','review_answer_timestamp']

for column in datetime_columns :
  orderReviews_df[column] = pd.to_datetime(orderReviews_df[column])

orderReviews_df.info()

#Mengganti tipe data pada kolom order_purchase_timestamp higga order_estimated_delivery
datetime_columns = ['order_purchase_timestamp', 'order_approved_at', 'order_delivered_carrier_date',
                    'order_delivered_customer_date', 'order_estimated_delivery_date']

for column in datetime_columns:
  orders_df[column] = pd.to_datetime(orders_df[column])

#Menangani missing values pada orders_df
orders_df['order_approved_at'].fillna(orders_df['order_approved_at'].median(), inplace=True)

orders_df['order_delivered_carrier_date'].fillna(orders_df['order_delivered_carrier_date']. median(), inplace=True)

orders_df['order_delivered_customer_date'].fillna(orders_df['order_delivered_carrier_date'].median(),inplace=True)

orders_df.info()

#Menangani missing values pada products_df
#Mengatasi missing values pada kolom product_category_name dengan metode imputasi menggunakan modus
products_df['product_category_name'].fillna(products_df['product_category_name'].mode()[0], inplace=True)

#Mengatasi missing values pada kolom product_name_lenght, product_description_length, dan product_photos_qty dengan metode imputasi mengguakan median
products_df['product_name_lenght'].fillna(products_df['product_description_lenght'].median(), inplace=True)
products_df['product_description_lenght'].fillna(products_df['product_description_lenght'].median(), inplace=True)
products_df['product_photos_qty'].fillna(products_df['product_photos_qty'].median(), inplace=True)

#Mengatasi missing values pada kolom product_weight_g,product_length_cm, product_height_cm, dan product_width_cm dengan metode dropping
products_df.dropna(subset=['product_weight_g','product_length_cm','product_height_cm','product_width_cm'], inplace=True)

products_df.info()

"""# **Exploratory Data Analysis (EDA)**

**Explore Tabel orders_df**
"""

#Ekstrak Bulanan dari kolom order_purchase_timestamp
orders_df['monthly_orders'] = orders_df['order_purchase_timestamp'].dt.month_name()

#Menghitung jumlah pesanan untuk setiap bulan
month_orders = orders_df['monthly_orders'].value_counts().reset_index()
month_orders.columns = ['Month', 'Number of Orders']

month_orders.head(12)

month_orders.head(12).to_csv('monthly_purchase.csv', index=False)

"""**Explore Tabel products_df dan orderItems_df**"""

#Menggabungkan tabel products_df dan productCategory_df
product_category = pd.merge(
    left = products_df,
    right = productCategory_df,
    how = 'left',
    left_on = 'product_category_name',
    right_on = 'product_category_name'
)
product_category.head()

#Menggabungkan data products_df dengan order_items_df berdasarkan product_id untuk mengidentifikasi top 5 product yang paling diminati
products_order_df = pd.merge(
    left = orderItems_df,
    right = product_category,
    how = 'left',
    left_on = 'product_id',
    right_on = 'product_id'
)
products_order_df.head(5)

products_order_df.to_csv('products_order_df.csv', index=False)

"""**Explore Tabel orders_df dan orderItems_df**"""

order_items = pd.merge(
    left = orders_df,
    right = orderItems_df,
    how = 'inner',
    left_on = 'order_id',
    right_on = 'order_id'
)
order_items

#Mengatur kolom waktu sebagai indeks DataFrame
order_items.set_index('order_purchase_timestamp', inplace=True)

#Mengatur jumlah pesanan per bulan untuk 1 tahun pertama
monthly_orders = order_items.resample('M').size().reset_index()
monthly_orders.columns = ['Month', 'Number of Orders']
monthly_orders.sort_values(by='Month', ascending=True).head(13)

monthly_orders.to_csv('monthly_orders.csv', index=False)

"""# **Visualization & Explanatory Analysis**

### **Bagaimana Pola Pembelian Produk pada Satu Tahun Pertama?**
"""

plt.figure(figsize=(10, 6))
sns.barplot(data=month_orders, x='Month', y='Number of Orders', palette='Pastel2')
plt.title('Pola Pembelian Produk Satu Tahun Pertama')
plt.xlabel('Bulan')
plt.ylabel('Jumlah Pesanan')
plt.xticks(rotation=40)
plt.show()

"""# **Apakah ada bulan tertentu dalam setahun yang cenderung memiliki penjualan lebih tinggi atau lebih rendah?**"""

plt.figure(figsize=(10,5))
sns.lineplot(data=monthly_orders, x='Month', y='Number of Orders',marker='o',color='red')
plt.title('Tren Penjualan Bulanan')
plt.xlabel('Month')
plt.ylabel('Jumlah Pesanan')
plt.grid(True)
plt.show()

"""# **Conclusion**

****Bagaimana Pola Pembelian Produk pada Satu Tahun Pertama?****


*   Dari visualisasi ini, dapat terlihat bahwa bulan Agustus,May,dan Juli menonjol sebagai bulan dengan volume pembelian produk yang lebih tinggi. Data ini menunjukkan bahwa pada bulan tersebut terjadi lonjakan pesanan yang signifikan dibandingkan bulan lainnya.
*   Perusahaan perlu secara rutin memonitor stok dan mengelola proses logistik mereka setiap bulan guna memastikan bahwa mereka dapat mengantisipasi fluktasi permintaan yang mungkin terjadi.

**Apakah ada bulan tertentu dalam sebulan yang cenderung memiliki penjualan lebih tinggi atau lebih rendah?**

*   Berdasarkan data penjualan bulanan, terlihat bahwa bulan Desember dan Februari cenderung memiliki penjualan yang lebih tinggi sedangkan bulan Januari memiliki penjualan yang lebih rendah.

*   Bulan Januari mengalami penjualan yang lebih rendah dikarenakan adanya pajak, biaya transaksi, kenaikan risiko saat perusahaan menerbitkan laporan tahunan. Sedangkan pada bulan Desember dan Februari merupakan bulan yang menjadi musim belanja liburan, sehingga penjualan pada bulan tersebut meningkat.
"""